// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: glyph.proto

package fontnik

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Stores a glyph with metrics and optional SDF bitmap information.
type Glyph struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// A signed distance field of the glyph with a border of 3 pixels.
	Bitmap []byte `protobuf:"bytes,2,opt,name=bitmap,proto3,oneof" json:"bitmap,omitempty"`
	// Glyph metrics.
	Width         uint32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        uint32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Left          int32  `protobuf:"zigzag32,5,opt,name=left,proto3" json:"left,omitempty"`
	Top           int32  `protobuf:"zigzag32,6,opt,name=top,proto3" json:"top,omitempty"`
	Advance       uint32 `protobuf:"varint,7,opt,name=advance,proto3" json:"advance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Glyph) Reset() {
	*x = Glyph{}
	mi := &file_glyph_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Glyph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Glyph) ProtoMessage() {}

func (x *Glyph) ProtoReflect() protoreflect.Message {
	mi := &file_glyph_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Glyph.ProtoReflect.Descriptor instead.
func (*Glyph) Descriptor() ([]byte, []int) {
	return file_glyph_proto_rawDescGZIP(), []int{0}
}

func (x *Glyph) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Glyph) GetBitmap() []byte {
	if x != nil {
		return x.Bitmap
	}
	return nil
}

func (x *Glyph) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Glyph) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Glyph) GetLeft() int32 {
	if x != nil {
		return x.Left
	}
	return 0
}

func (x *Glyph) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *Glyph) GetAdvance() uint32 {
	if x != nil {
		return x.Advance
	}
	return 0
}

// Stores fontstack information and a list of faces.
type Fontstack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Range         string                 `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Glyphs        []*Glyph               `protobuf:"bytes,3,rep,name=glyphs,proto3" json:"glyphs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fontstack) Reset() {
	*x = Fontstack{}
	mi := &file_glyph_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fontstack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fontstack) ProtoMessage() {}

func (x *Fontstack) ProtoReflect() protoreflect.Message {
	mi := &file_glyph_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fontstack.ProtoReflect.Descriptor instead.
func (*Fontstack) Descriptor() ([]byte, []int) {
	return file_glyph_proto_rawDescGZIP(), []int{1}
}

func (x *Fontstack) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fontstack) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *Fontstack) GetGlyphs() []*Glyph {
	if x != nil {
		return x.Glyphs
	}
	return nil
}

type Glyphs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stacks        []*Fontstack           `protobuf:"bytes,1,rep,name=stacks,proto3" json:"stacks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Glyphs) Reset() {
	*x = Glyphs{}
	mi := &file_glyph_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Glyphs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Glyphs) ProtoMessage() {}

func (x *Glyphs) ProtoReflect() protoreflect.Message {
	mi := &file_glyph_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Glyphs.ProtoReflect.Descriptor instead.
func (*Glyphs) Descriptor() ([]byte, []int) {
	return file_glyph_proto_rawDescGZIP(), []int{2}
}

func (x *Glyphs) GetStacks() []*Fontstack {
	if x != nil {
		return x.Stacks
	}
	return nil
}

var File_glyph_proto protoreflect.FileDescriptor

const file_glyph_proto_rawDesc = "" +
	"\n" +
	"\vglyph.proto\x12\afontnik\"\xad\x01\n" +
	"\x05glyph\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1b\n" +
	"\x06bitmap\x18\x02 \x01(\fH\x00R\x06bitmap\x88\x01\x01\x12\x14\n" +
	"\x05width\x18\x03 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\rR\x06height\x12\x12\n" +
	"\x04left\x18\x05 \x01(\x11R\x04left\x12\x10\n" +
	"\x03top\x18\x06 \x01(\x11R\x03top\x12\x18\n" +
	"\aadvance\x18\a \x01(\rR\aadvanceB\t\n" +
	"\a_bitmap\"]\n" +
	"\tfontstack\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05range\x18\x02 \x01(\tR\x05range\x12&\n" +
	"\x06glyphs\x18\x03 \x03(\v2\x0e.fontnik.glyphR\x06glyphs\"4\n" +
	"\x06glyphs\x12*\n" +
	"\x06stacks\x18\x01 \x03(\v2\x12.fontnik.fontstackR\x06stacksB\x10H\x03Z\f./../fontnikb\x06proto3"

var (
	file_glyph_proto_rawDescOnce sync.Once
	file_glyph_proto_rawDescData []byte
)

func file_glyph_proto_rawDescGZIP() []byte {
	file_glyph_proto_rawDescOnce.Do(func() {
		file_glyph_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_glyph_proto_rawDesc), len(file_glyph_proto_rawDesc)))
	})
	return file_glyph_proto_rawDescData
}

var file_glyph_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_glyph_proto_goTypes = []any{
	(*Glyph)(nil),     // 0: fontnik.glyph
	(*Fontstack)(nil), // 1: fontnik.fontstack
	(*Glyphs)(nil),    // 2: fontnik.glyphs
}
var file_glyph_proto_depIdxs = []int32{
	0, // 0: fontnik.fontstack.glyphs:type_name -> fontnik.glyph
	1, // 1: fontnik.glyphs.stacks:type_name -> fontnik.fontstack
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_glyph_proto_init() }
func file_glyph_proto_init() {
	if File_glyph_proto != nil {
		return
	}
	file_glyph_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_glyph_proto_rawDesc), len(file_glyph_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_glyph_proto_goTypes,
		DependencyIndexes: file_glyph_proto_depIdxs,
		MessageInfos:      file_glyph_proto_msgTypes,
	}.Build()
	File_glyph_proto = out.File
	file_glyph_proto_goTypes = nil
	file_glyph_proto_depIdxs = nil
}
